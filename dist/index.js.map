{"version":3,"sources":["../src/index.ts","../src/withComponentAvailable.tsx"],"sourcesContent":["import {\n  Action,\n  Dispatchers,\n  ExposeStoreType,\n  ModuleName,\n  Select,\n  Selectors,\n  SliceName,\n} from \"@/type\";\nimport {\n  CombinedSliceReducer,\n  Selector as ReduxSelector,\n} from \"@reduxjs/toolkit\";\nimport * as remoteStores from \"@remote-stores\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nexport * from \"@/withComponentAvailable\";\n\nconst isObjectEmpty = (object: Record<string, any> = {}) => {\n  return Object.keys(object).length === 0;\n};\n\nconst exposeStores = remoteStores;\nlet rootReducer: CombinedSliceReducer<any>;\n\nconst isRemoteModule = (key: ModuleName) => {\n  return typeof exposeStores[key].default === \"object\";\n};\n\nexport const MFState = (_rootReducer?: CombinedSliceReducer<any>) => {\n  if (_rootReducer) rootReducer = _rootReducer;\n\n  const slices: ExposeStoreType = {};\n  const actions: Action = {};\n  const selectors: Select = {};\n  (function init() {\n    if (!exposeStores) return;\n\n    const initSlices = (moduleName: string) => {\n      const store = exposeStores[moduleName as ModuleName]?.default;\n      if (!isRemoteModule(moduleName) || !store) return;\n\n      Object.values(store).forEach((slice: any) => {\n        slices[slice.name] = slice;\n      });\n    };\n\n    const initActions = (moduleName: string) => {\n      const mod = exposeStores[moduleName as ModuleName]?.default || {};\n\n      Object.keys(mod).forEach((sliceName) => {\n        const dispatchers =\n          mod[sliceName as SliceName<ModuleName>]?.dispatchers || {};\n        actions[moduleName] = actions[moduleName] || {};\n\n        actions[moduleName][sliceName] = {\n          ...(actions[moduleName][sliceName] || {}),\n          ...dispatchers,\n        };\n      });\n    };\n\n    const initSelectors = (moduleName: string) => {\n      const mod = exposeStores[moduleName as ModuleName]?.default || {};\n\n      Object.keys(mod).forEach((sliceName) => {\n        const selectorsMap =\n          mod[sliceName as SliceName<ModuleName>]?.selectors || {};\n        selectors[moduleName] = selectors[moduleName] || {};\n\n        selectors[moduleName][sliceName] = {\n          ...(selectors[moduleName][sliceName] || {}),\n          ...selectorsMap,\n        };\n      });\n    };\n\n    for (const moduleName in exposeStores) {\n      if (Object.prototype.hasOwnProperty.call(exposeStores, moduleName)) {\n        initSlices(moduleName);\n        initActions(moduleName);\n        initSelectors(moduleName);\n      }\n    }\n  })();\n\n  const injectReducers = async () => {\n    if (!rootReducer) return;\n    for (const remoteSliceKey in slices) {\n      const slice = slices[remoteSliceKey];\n      rootReducer.inject({\n        reducerPath: slice.name,\n        reducer: slice.reducer,\n      });\n    }\n  };\n\n  const useRemoteSelector = <T>(\n    callback: (selector: Select) => ReduxSelector<any, T> | undefined,\n    defaultValue: T | null = null\n  ): T | null => {\n    try {\n      const stateSelector = callback?.(selectors);\n      if (!stateSelector) {\n        console.warn(\"Selector does not exist\");\n        return defaultValue;\n      }\n\n      return useSelector(stateSelector);\n    } catch (error: any) {\n      // console.error(error.message);\n      return defaultValue;\n    }\n  };\n  const handleDispatchError = (\n    error: any,\n    callback: (action: Action) => Action\n  ) => {\n    const undefinedErr = \"Cannot read properties of undefined\";\n    const match = error.message.match(/reading '(.+?)'/);\n\n    if (match && error.message.startsWith(undefinedErr)) {\n      console.error(\n        `The (${match[1]}) method does not exist in the Remote Module. Please check: ${callback}`\n      );\n    }\n  };\n\n  const useRemoteDispatch = () => {\n    const dispatch = useDispatch();\n\n    return (callback: (action: Action) => Action) => {\n      if (isObjectEmpty(actions)) {\n        console.log(\"The remote-store.ts is empty, does not have any actions\");\n        return;\n      }\n\n      try {\n        dispatch(callback(actions) as any);\n      } catch (error: any) {\n        handleDispatchError(error, callback);\n      }\n    };\n  };\n\n  const useRemoteOnline = () => {\n    const isModuleOnline = (moduleName: ModuleName) => {\n      return (\n        typeof exposeStores[moduleName as ModuleName]?.default === \"object\"\n      );\n    };\n\n    const isValidDispatch = <M extends ModuleName, S extends SliceName<M>>(\n      moduleName: M,\n      sliceName: S,\n      dispatch: keyof Dispatchers<M, S>\n    ) => {\n      if (!isModuleOnline || !sliceName || !dispatch) return false;\n\n      return !!exposeStores[moduleName][\"default\"]?.[sliceName]?.dispatchers?.[\n        dispatch\n      ];\n    };\n\n    const isValidSelector = <M extends ModuleName, S extends SliceName<M>>(\n      moduleName: M,\n      sliceName: S,\n      selector: keyof Selectors<M, S>\n    ) => {\n      if (!isModuleOnline || !sliceName || !selector) return false;\n\n      return !!exposeStores[moduleName][\"default\"]?.[sliceName]?.selectors[\n        selector\n      ];\n    };\n\n    return {\n      isModuleOnline,\n      isValidDispatch,\n      isValidSelector,\n    };\n  };\n\n  return {\n    injectReducers,\n    useRemoteDispatch,\n    useRemoteSelector,\n    useRemoteOnline,\n  };\n};\n","import { MFState } from \"@/index\";\r\nimport { Dispatchers, ModuleName, Selectors, SliceName } from \"@/type\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react/jsx-runtime\";\r\n\r\ninterface WithComponentAvailable<M extends ModuleName, S extends SliceName<M>> {\r\n  remoteConfig?: {\r\n    hideIfUnavailable?: boolean;\r\n    fallback?: React.ReactNode;\r\n    moduleName?: M;\r\n    sliceName?: S;\r\n  } & (\r\n    | { dispatchName?: keyof Dispatchers<M, S>; selectorName?: undefined }\r\n    | { dispatchName?: undefined; selectorName?: keyof Selectors<M, S> }\r\n  );\r\n}\r\nexport const withComponentAvailable = <\r\n  P extends object,\r\n  M extends ModuleName,\r\n  S extends SliceName<M>\r\n>(\r\n  WrappedComponent: React.ComponentType<P & WithComponentAvailable<M, S>>\r\n) => {\r\n  return (props: P & WithComponentAvailable<M, S>) => {\r\n    const [isMounted, setIsMounted] = useState(false);\r\n\r\n    useEffect(() => {\r\n      setIsMounted(true);\r\n    }, []);\r\n\r\n    if (!isMounted) {\r\n      return null;\r\n    }\r\n\r\n    const { remoteConfig } = props;\r\n    const {\r\n      hideIfUnavailable = true,\r\n      fallback = null,\r\n      moduleName = \"\",\r\n      sliceName = \"\",\r\n      dispatchName = \"\",\r\n      selectorName = \"\",\r\n    } = remoteConfig || {};\r\n\r\n    const { isModuleOnline, isValidDispatch, isValidSelector } =\r\n      MFState().useRemoteOnline();\r\n\r\n    const isOnline = isModuleOnline(moduleName);\r\n    const isDispatch = isValidDispatch(\r\n      moduleName,\r\n      sliceName,\r\n      dispatchName as never\r\n    );\r\n    const isSelector = isValidSelector(\r\n      moduleName,\r\n      sliceName,\r\n      selectorName as never\r\n    );\r\n\r\n    if (hideIfUnavailable)\r\n      if (\r\n        !isOnline ||\r\n        (dispatchName && !isDispatch) ||\r\n        (selectorName && !isSelector)\r\n      ) {\r\n        return fallback;\r\n      }\r\n\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n};\r\n"],"mappings":"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","names":[]}