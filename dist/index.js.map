{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import * as remoteStores from \"@remote-stores\"; // FIX\nimport { CombinedSliceReducer, PayloadAction, Reducer } from \"@reduxjs/toolkit\";\nimport { Selector } from \"react-redux\";\n\ntype RemoteType = {\n  name: string;\n  reducer: Reducer;\n  dispatchers: PayloadAction<unknown>;\n  selectors: Selector<unknown, unknown>;\n};\n\ntype ExposeStoreType = {\n  [key: string]: RemoteType;\n};\n\ntype ModuleName = keyof typeof remoteStores;\ntype ImportModuleType = typeof import(\"@remote-stores\");\ntype SliceName<M extends ModuleName> = keyof ImportModuleType[M][\"default\"];\n\ntype Selectors<\n  M extends ModuleName,\n  S extends SliceName<M> = SliceName<M>\n> = ImportModuleType[M][\"default\"][S] extends { selectors: infer T }\n  ? T\n  : never;\n\ntype Dispatchers<\n  M extends ModuleName,\n  S extends SliceName<M> = SliceName<M>\n> = ImportModuleType[M][\"default\"][S] extends { dispatchers: infer T }\n  ? T\n  : never;\n\nconst exposeStores = remoteStores;\nlet rootReducer: CombinedSliceReducer<any>;\n\nexport const safeSelect = <\n  M extends ModuleName,\n  S extends { [K in SliceName<M>]: Selectors<M, K> }\n>(\n  selector: S,\n  defaultValue: unknown = null\n): S => {\n  try {\n    if (!selector) return (() => defaultValue) as any;\n    return selector;\n  } catch {\n    return (() => defaultValue) as any;\n  }\n};\n\nexport const MFState = (_rootReducer?: CombinedSliceReducer<any>) => {\n  if (_rootReducer) rootReducer = _rootReducer;\n\n  const slices: ExposeStoreType = {};\n  const isRemoteModule = (key: ModuleName) => {\n    return typeof exposeStores[key].default === \"object\";\n  };\n\n  (function init() {\n    if (!exposeStores) return;\n    for (const key in exposeStores) {\n      if (Object.prototype.hasOwnProperty.call(exposeStores, key)) {\n        const _key = key as ModuleName;\n        if (isRemoteModule(_key)) {\n          const store = exposeStores[_key].default as any;\n          for (const storeKey in store) {\n            slices[store[storeKey].name] = store[storeKey];\n          }\n        }\n      }\n    }\n  })();\n\n  const injectReducers = async () => {\n    if (!rootReducer) return;\n    for (const remoteSliceKey in slices) {\n      const slice = slices[remoteSliceKey];\n      rootReducer.inject({\n        reducerPath: slice.name,\n        reducer: slice.reducer,\n      });\n    }\n  };\n\n  const dispatchers = <\n    M extends ModuleName,\n    S extends { [K in SliceName<M>]: Dispatchers<M, K> }\n  >(\n    moduleName: M\n  ): S => {\n    if (!moduleName || !remoteStores?.[moduleName]) return {} as S;\n    const mod = (remoteStores[moduleName] as any)[\"default\"];\n    const dispatchers = Object.keys(mod).reduce((acc: any, sliceName: any) => {\n      acc[sliceName] = mod[sliceName].dispatchers;\n      return acc;\n    }, {});\n    return dispatchers;\n  };\n\n  const selectors = <\n    M extends ModuleName,\n    S extends { [K in SliceName<M>]: Selectors<M, K> }\n  >(\n    moduleName: M,\n    callback?: (selectors: S) => void\n  ): S => {\n    if (!moduleName || !remoteStores?.[moduleName]) return {} as S;\n    const mod = (remoteStores[moduleName] as any)[\"default\"];\n    const selectors = Object.keys(mod).reduce((acc: any, sliceName: any) => {\n      acc[sliceName] = mod[sliceName].selectors;\n      return acc;\n    }, {} as S);\n    callback?.(selectors);\n    return selectors;\n  };\n\n  return {\n    injectReducers,\n    dispatchers,\n    selectors,\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA8B;AAiC9B,IAAM,eAAe;AACrB,IAAI;AAEG,IAAM,aAAa,CAIxB,UACA,eAAwB,SAClB;AACN,MAAI;AACF,QAAI,CAAC,SAAU,QAAQ,MAAM;AAC7B,WAAO;AAAA,EACT,QAAQ;AACN,WAAQ,MAAM;AAAA,EAChB;AACF;AAEO,IAAM,UAAU,CAAC,iBAA6C;AACnE,MAAI,aAAc,eAAc;AAEhC,QAAM,SAA0B,CAAC;AACjC,QAAM,iBAAiB,CAAC,QAAoB;AAC1C,WAAO,OAAO,aAAa,GAAG,EAAE,YAAY;AAAA,EAC9C;AAEA,GAAC,SAAS,OAAO;AACf,QAAI,CAAC,aAAc;AACnB,eAAW,OAAO,cAAc;AAC9B,UAAI,OAAO,UAAU,eAAe,KAAK,cAAc,GAAG,GAAG;AAC3D,cAAM,OAAO;AACb,YAAI,eAAe,IAAI,GAAG;AACxB,gBAAM,QAAQ,aAAa,IAAI,EAAE;AACjC,qBAAW,YAAY,OAAO;AAC5B,mBAAO,MAAM,QAAQ,EAAE,IAAI,IAAI,MAAM,QAAQ;AAAA,UAC/C;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,GAAG;AAEH,QAAM,iBAAiB,YAAY;AACjC,QAAI,CAAC,YAAa;AAClB,eAAW,kBAAkB,QAAQ;AACnC,YAAM,QAAQ,OAAO,cAAc;AACnC,kBAAY,OAAO;AAAA,QACjB,aAAa,MAAM;AAAA,QACnB,SAAS,MAAM;AAAA,MACjB,CAAC;AAAA,IACH;AAAA,EACF;AAEA,QAAM,cAAc,CAIlB,eACM;AACN,QAAI,CAAC,cAAc,EAAC,6CAAe,aAAa,QAAO,CAAC;AACxD,UAAM,MAAO,aAAa,UAAU,EAAU,SAAS;AACvD,UAAMA,eAAc,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,KAAU,cAAmB;AACxE,UAAI,SAAS,IAAI,IAAI,SAAS,EAAE;AAChC,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AACL,WAAOA;AAAA,EACT;AAEA,QAAM,YAAY,CAIhB,YACA,aACM;AACN,QAAI,CAAC,cAAc,EAAC,6CAAe,aAAa,QAAO,CAAC;AACxD,UAAM,MAAO,aAAa,UAAU,EAAU,SAAS;AACvD,UAAMC,aAAY,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,KAAU,cAAmB;AACtE,UAAI,SAAS,IAAI,IAAI,SAAS,EAAE;AAChC,aAAO;AAAA,IACT,GAAG,CAAC,CAAM;AACV,yCAAWA;AACX,WAAOA;AAAA,EACT;AAEA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;","names":["dispatchers","selectors"]}